{
    "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
    "id": "fe725709-3b76-4504-8d6a-a280c20d6ef3",
    "name": "MachineIdentityExtension",
    "friendlyName": "Machine Identity Extension",
    "description": "Generate keys and simplify certificate acquisition by eliminating the need to write code to interact with the Venafi REST API.  Azure DevOps extension for Venafi VCert, https://github.com/Venafi/vcert.",
    "helpMarkDown": "",
    "category": "Azure Pipelines",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Greg Brownstein",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 1
    },
    "instanceNameFormat": "Machine Identity - $(action)",
    "groups": [
        {
            "name": "mainGroup",
            "displayName": "Main",
            "isExpanded": true
        },
        {
            "name": "enrollGroup",
            "displayName": "Request Certificate",
            "isExpanded": false,
            "visibleRule": "action = request"
        },
        {
            "name": "pickupGroup",
            "displayName": "Retrieve Certificate",
            "isExpanded": false,
            "visibleRule": "action = retrieve"
        },
        {
            "name": "renewGroup",
            "displayName": "Renew Certificate",
            "isExpanded": false,
            "visibleRule": "action = renew"
        },
        {
            "name": "getTokenGroup",
            "displayName": "Get Token",
            "isExpanded": false,
            "visibleRule": "action = getToken"
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "action",
            "type": "pickList",
            "label": "Action",
            "defaultValue": "request",
            "required": true,
            "helpMarkDown": "Select the action to perform",
            "options": {
                "request": "Request Certificate",
                "retrieve": "Retrieve Certificate",
                "renew": "Renew Certificate",
                "getToken": "New Auth Token (TPP only) (beta)"
            }
        },
        {
            "name": "serverType",
            "type": "radio",
            "label": "Server Type",
            "defaultValue": "tpp",
            "required": true,
            "helpMarkDown": "Server type to connect to",
            "options": {
                "cloud": "Venafi Cloud",
                "tpp": "Trust Protection Platform (TPP)"
            },
            "visibleRule": "action != getToken",
            "groupName": "mainGroup"
        },
        {
            "name": "serverUrlTpp",
            "type": "string",
            "label": "Server URL",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "TPP server URL, eg. tpp.venafi.example. 'https://' will be appended automatically.",
            "visibleRule": "serverType = tpp || action = getToken",
            "groupName": "mainGroup"
        },
        {
            "name": "authTokenTpp",
            "type": "string",
            "label": "Auth Token",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Authentication token, requires TPP v20.1 or greater",
            "visibleRule": "serverType = tpp",
            "groupName": "mainGroup"
        },
        {
            "name": "apiKeyCloud",
            "type": "string",
            "label": "API Key",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "API key for Venafi Cloud.<br/><br/>Example: vvvvvvvv-wwww-xxxx-yyyy-zzzzzzzzzzzz",
            "visibleRule": "serverType = cloud",
            "groupName": "mainGroup"
        },
        {
            "name": "enrollZoneCloud",
            "type": "string",
            "label": "Project Zone",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Application and associated issuing template in the form application\\template",
            "visibleRule": "serverType = cloud",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollCommonName",
            "type": "string",
            "label": "Common Name (CN)",
            "defaultValue": "",
            "required": true,
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollZoneTpp",
            "type": "string",
            "label": "Target Folder Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "serverType = tpp",
            "helpMarkDown": "Folder path where the certificate object will be placed. \\VED\\Policy\\ will be prepended, you only need to specify child folders under the root Policy folder.<br/><br/>Example: DevOps\\CorpApp",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollKeyPassword",
            "type": "string",
            "label": "Private Key Password",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Password for encrypting the private key.  Specifying a value here will override the default non-encrypted private key.  It is recommended to use a secret variable, <https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables>.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollFormat",
            "type": "radio",
            "label": "Format",
            "defaultValue": "pem",
            "required": true,
            "options": {
                "pem": "PEM",
                "json": "JSON",
                "pkcs12.file": "PKCS#12",
                "jks.file": "JKS"
            },
            "helpMarkDown": "",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollChain",
            "type": "radio",
            "label": "Chain",
            "defaultValue": "root-last",
            "required": true,
            "options": {
                "root-last": "Root Last",
                "root-first": "Root First",
                "ignore": "Ignore"
            },
            "helpMarkDown": "Use to include the certificate chain in the output, and to specify where to place it in the file.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollCsrTpp",
            "type": "radio",
            "label": "Certificate Signing Request (CSR)",
            "defaultValue": "local",
            "required": false,
            "options": {
                "local": "Local",
                "service": "Service",
                "file": "File"
            },
            "visibleRule": "serverType = tpp",
            "helpMarkDown": "Specify the CSR and private key location.<br/></br/>Local: private key and CSR will be generated locally<br/>Service: private key and CSR will be generated within Venafi Platform<br/>File: CSR will be read from a file by name",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollCsrCloud",
            "type": "radio",
            "label": "Certificate Signing Request (CSR)",
            "defaultValue": "local",
            "required": false,
            "options": {
                "local": "Local",
                "file": "File"
            },
            "visibleRule": "serverType = cloud",
            "helpMarkDown": "Specify the CSR and private key location.<br/></br/>Local: private key and CSR will be generated locally<br/>File: CSR will be read from a file by name",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollCsrFile",
            "type": "filePath",
            "label": "CSR File",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "File to read the CSR from",
            "visibleRule": "enrollCsrTpp = file || enrollCsrCloud = file",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollSanDns",
            "type": "string",
            "label": "DNS SAN",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Use to specify a DNS Subject Alternative Name. To specify more than one, separate with a comma.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollSanEmailTpp",
            "type": "string",
            "label": "Email SAN",
            "defaultValue": "",
            "required": false,
            "visibleRule": "serverType = tpp",
            "helpMarkDown": "Use to specify a Email Subject Alternative Name. To specify more than one, separate with a comma.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollSanIpTpp",
            "type": "string",
            "label": "IP SAN",
            "defaultValue": "",
            "required": false,
            "visibleRule": "serverType = tpp",
            "helpMarkDown": "Use to specify a IP Subject Alternative Name. To specify more than one, separate with a comma.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollNicknameTpp",
            "type": "string",
            "label": "New Certificate Name",
            "defaultValue": "",
            "required": false,
            "visibleRule": "serverType = tpp",
            "helpMarkDown": "Create a new certificate with the same CN, but a distinct object in TPP.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollCustomFieldsTpp",
            "type": "multiLine",
            "label": "Custom Fields",
            "required": false,
            "defaultValue": "",
            "visibleRule": "serverType = tpp",
            "groupName": "enrollGroup",
            "helpMarkDown": "Enter custom fields in json format.  To provide more than 1 value per name, separate the values with a comma.  Click on the elipsis to edit easily.",
            "properties": {
                "editorExtension": "ms.vss-services-azure.azure-servicebus-message-grid"
            }
        },
        {
            "name": "enrollNoPickup",
            "label": "Retrieve Certificate Later",
            "defaultValue": false,
            "required": false,
            "type": "boolean",
            "helpMarkDown": "By default, VCert will try to retrieve the certificate for 60 seconds.  If your CA might not respond in time or your workflow requires it, you can choose to not retrieve the certificate now and do so later with the pickup id which is automatically saved as environment variable VCERT_ID.",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollOutputType",
            "type": "radio",
            "label": "Certificate Output",
            "defaultValue": "outputEnvVar",
            "required": true,
            "options": {
                "outputEnvVar": "Environment variable",
                "outputFile": "File"
            },
            "helpMarkDown": "Output to either a file or an environment variable to be used in a subsequent task.  The option for an environment variable is only available for pem and json formats.",
            "visibleRule": "enrollFormat NotEndsWith .file && enrollNoPickup = false",
            "groupName": "enrollGroup"
        },
        {
            "name": "enrollOutputFile",
            "type": "filePath",
            "label": "Certificate Output File Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "enrollOutputType = outputFile || enrollFormat EndsWith .file",
            "helpMarkDown": "Path to output file.  Required if output type 'file' was selected or format is either PKCS#12 or JKS.",
            "groupName": "enrollGroup"
        },
        {
            "name": "pickupIdFrom",
            "type": "radio",
            "label": "Pickup ID From",
            "defaultValue": "pickupIdFromEnvVar",
            "required": true,
            "options": {
                "pickupIdFromEnvVar": "Environment Variable",
                "pickupIdFromId": "ID",
                "pickupIdFromFile": "File path"
            },
            "helpMarkDown": "Where to get the pickup ID from.<br/><br/>Environment variable: From VCERT_ID from a prior VCert Request operation.<br/>ID: provide the pickup ID<br/>File path: provide the path to a file which contains the pickup ID",
            "visibleRule": "action = retrieve",
            "groupName": "pickupGroup"
        },
        {
            "name": "pickupId",
            "type": "string",
            "label": "ID / Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Reference ID for certificate to pickup.  For Venafi Cloud this will be a GUID and for TPP this will be the path to the certificate, eg. \\ved\\policy\\mycert.com",
            "visibleRule": "pickupIdFrom = pickupIdFromId",
            "groupName": "pickupGroup"
        },
        {
            "name": "pickupFile",
            "type": "filePath",
            "label": "File Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "pickupIdFrom = pickupIdFromFile",
            "groupName": "pickupGroup"
        },
        {
            "name": "pickupFormat",
            "type": "radio",
            "label": "Format",
            "defaultValue": "pem",
            "required": true,
            "options": {
                "pem": "PEM",
                "json": "JSON",
                "pkcs12": "PKCS#12",
                "jks": "JKS"
            },
            "helpMarkDown": "",
            "groupName": "pickupGroup"
        },
        {
            "name": "pickupOutputType",
            "type": "radio",
            "label": "Certificate Output",
            "defaultValue": "outputEnvVar",
            "required": true,
            "options": {
                "outputEnvVar": "Environment variable",
                "outputFile": "File"
            },
            "helpMarkDown": "Output to either a file or an environment variable to be used in a subsequent task.  The option for an environment variable is only available for pem and json formats.",
            "visibleRule": "pickupFormat = pem || pickupFormat = json",
            "groupName": "pickupGroup"
        },
        {
            "name": "pickupOutputFile",
            "type": "filePath",
            "label": "Certificate Output File Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "pickupOutputType = outputFile || pickupFormat = pkcs12 || pickupFormat = jks",
            "helpMarkDown": "Path to output file.  Required if output type 'file' was selected or format is either PKCS#12 or JKS.",
            "groupName": "pickupGroup"
        },
        {
            "name": "renewIdFrom",
            "type": "radio",
            "label": "Certificate ID From",
            "defaultValue": "renewIdFromEnvVar",
            "required": true,
            "options": {
                "renewIdFromEnvVar": "Environment Variable",
                "renewIdFromId": "ID",
                "renewIdFromFile": "File path"
            },
            "helpMarkDown": "Where to get the certificate ID from.<br/><br/>Environment variable: From VCERT_ID from a prior VCert Request operation.<br/>ID: provide the renew ID<br/>File path: provide the path to a file which contains the renew ID",
            "visibleRule": "action = renew",
            "groupName": "renewGroup"
        },
        {
            "name": "renewId",
            "type": "string",
            "label": "ID",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Reference ID for certificate to renew.  For Venafi Cloud this will be a GUID and for TPP this will be the path to the certificate, eg. \\ved\\policy\\mycert.com",
            "visibleRule": "renewIdFrom = renewIdFromId",
            "groupName": "renewGroup"
        },
        {
            "name": "renewFile",
            "type": "filePath",
            "label": "File Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "renewIdFrom = renewIdFromFile",
            "groupName": "renewGroup"
        },
        {
            "name": "getTokenUsernameTpp",
            "type": "string",
            "label": "Username",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "",
            "visibleRule": "action = getToken",
            "groupName": "getTokenGroup"
        },
        {
            "name": "getTokenPasswordTpp",
            "type": "string",
            "label": "Password",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "",
            "visibleRule": "action = getToken",
            "groupName": "getTokenGroup"
        },
        {
            "name": "verbose",
            "label": "Verbose",
            "defaultValue": false,
            "required": false,
            "type": "boolean",
            "helpMarkDown": "Use to increase the level of logging detail, which is helpful when troubleshooting issues.",
            "groupName": "advanced"
        },
        {
            "name": "testMode",
            "label": "Test Mode",
            "defaultValue": false,
            "required": false,
            "type": "boolean",
            "helpMarkDown": "Use to test operations without connecting to Venafi Platform. This option is useful for integration tests where the test environment does not have access to Venafi Platform",
            "groupName": "advanced"
        }
    ],
    "execution": {
        "Node10": {
            "target": "index.js"
        }
    }
}